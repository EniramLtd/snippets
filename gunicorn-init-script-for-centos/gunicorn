#!/bin/sh
# chkconfig: 45 90 10


# Based on gist #1511911 by xspager: https://gist.github.com/xspager/1511911


# WARNING: user $RUN_AS must have +w on $PIDDIR
NAME=foobar-gunicorn
DESC=foobar-gunicorn
SERVER="$2"


# Configure non-changing service details
# GUNICORN : path to gunicorn binary
# RUN_AS  : username to run the service
# SERVERS : service definitions
# CONFIG_PATH : user configuration that is sourced
# PIDDIR : path to store pid files in
. /opt/eniram/foobar/gunicorn_service_env


test -x $GUNICORN || (echo "GUNICORN env variable not set or invalid " && exit 0)

# Source function library.
. /etc/init.d/functions

# Source networking configuration.
. /etc/sysconfig/network

# Check that networking is up.
[ "$NETWORKING" = "no" ] && exit 0


# User configuration (e.g. logging)
if [ -f $CONFIG_PATH ] ; then
	. $CONFIG_PATH
fi

if [ ! -d $PIDDIR ]; then
	mkdir $PIDDIR
fi

start () {
	for i in "${SERVERS[@]}"
	do
		:
		set -- "$i"
		IFS="	"; declare -a data=($*)

		if [ "$SERVER" ]; then
			if [ "$SERVER" != ${data[0]} ]; then
				continue
			fi
		fi
		echo "Spawning ${data[0]}"
        cd ${data[2]}
		daemon --user $RUN_AS --pidfile $PIDDIR/${data[0]}.pid $GUNICORN -b ${data[1]} \
		       -w ${data[4]} -D -p $PIDDIR/${data[0]}.pid --log-config $LOGGING ${data[3]}
	done
	return
}

stop () {
	for i in "${SERVERS[@]}"
	do
		:
		set -- "$i"
		IFS="	"; declare -a data=($*)
		if [ "$SERVER" ]; then
			if [ "$SERVER" != ${data[0]} ]; then
				continue
			fi
		fi
		if [ -f $PIDDIR/${data[0]}.pid ]; then
			echo "Killing ${data[0]}"
			kill $(cat $PIDDIR/${data[0]}.pid)
		fi
	done
}

rhstatus () {
	for i in "${SERVERS[@]}"
	do
		:
		set -- "$i"
		IFS="	"; declare -a data=($*)
		if [ "$SERVER" ]; then
			if [ "$SERVER" != ${data[0]} ]; then
				continue
			fi
		fi
        echo "status ${data[0]}:"
        status -p "$PIDDIR/${data[0]}.pid" $GUNICORN
	done
}


case "$1" in
  start)
		echo "Starting $DESC"
		start
		;;
  stop)
		echo "Stopping $DESC"
		stop
		;;
  status)
		echo "Listing status of $DESC"
		rhstatus
		;;
  restart)
		echo "Restarting $DESC"
		stop
		sleep 1
		start
		;;
  *)
		N=/etc/init.d/$NAME
		echo "Usage: $N {start|stop|restart} [particular_server_to_restart]" >&2
		exit 1
		;;
esac

exit 0